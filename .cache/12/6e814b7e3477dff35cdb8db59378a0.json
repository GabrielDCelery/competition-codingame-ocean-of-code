{"id":"MkC1","dependencies":[{"name":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/package.json","includedInParent":true,"mtime":1584917583936},{"name":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/package.json","includedInParent":true,"mtime":1584917586207},{"name":"./AStarFinder","loc":{"line":1,"column":26},"parent":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/DijkstraFinder.js","resolved":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/AStarFinder.js"}],"generated":{"js":"var t=require(\"./AStarFinder\");function r(r){t.call(this,r),this.heuristic=function(t,r){return 0}}r.prototype=new t,r.prototype.constructor=r,module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":14,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":14,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":14,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":15,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":15,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":15,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":15,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":16,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":16,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":16,"column":0},"generated":{"line":1,"column":75}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":16,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":16,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":17,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":17,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":141}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":143}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/pathfinding/src/finders/DijkstraFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":158}}],"sources":{"../node_modules/pathfinding/src/finders/DijkstraFinder.js":"var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n"},"lineCount":null}},"error":null,"hash":"39d7acce1b7aa40b85fed9d5a75d8b61","cacheData":{"env":{}}}