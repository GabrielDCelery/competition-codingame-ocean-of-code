{"id":"K50Q","dependencies":[{"name":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/package.json","includedInParent":true,"mtime":1584917583936},{"name":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/package.json","includedInParent":true,"mtime":1584917586207},{"name":"../core/DiagonalMovement","loc":{"line":4,"column":31},"parent":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JumpPointFinder.js","resolved":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/core/DiagonalMovement.js"},{"name":"./JPFNeverMoveDiagonally","loc":{"line":5,"column":37},"parent":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JumpPointFinder.js","resolved":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js"},{"name":"./JPFAlwaysMoveDiagonally","loc":{"line":6,"column":38},"parent":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JumpPointFinder.js","resolved":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js"},{"name":"./JPFMoveDiagonallyIfNoObstacles","loc":{"line":7,"column":45},"parent":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JumpPointFinder.js","resolved":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js"},{"name":"./JPFMoveDiagonallyIfAtMostOneObstacle","loc":{"line":8,"column":51},"parent":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JumpPointFinder.js","resolved":"/home/gzeller/projects/competition-codingame-ocean-of-code/temp/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js"}],"generated":{"js":"var e=require(\"../core/DiagonalMovement\"),o=require(\"./JPFNeverMoveDiagonally\"),a=require(\"./JPFAlwaysMoveDiagonally\"),n=require(\"./JPFMoveDiagonallyIfNoObstacles\"),l=require(\"./JPFMoveDiagonallyIfAtMostOneObstacle\");function r(r){return(r=r||{}).diagonalMovement===e.Never?new o(r):r.diagonalMovement===e.Always?new a(r):r.diagonalMovement===e.OnlyWhenNoObstacles?new n(r):new l(r)}module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":4,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":4,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":4,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":4,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":5,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":5,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":5,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":6,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":6,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":6,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":7,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":7,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":7,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":8,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":8,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":8,"column":0},"generated":{"line":1,"column":175}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":18,"column":0},"generated":{"line":1,"column":217}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":18,"column":0},"generated":{"line":1,"column":226}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":18,"column":0},"generated":{"line":1,"column":228}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":20,"column":0},"generated":{"line":1,"column":231}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":19,"column":0},"generated":{"line":1,"column":238}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":19,"column":0},"generated":{"line":1,"column":240}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":19,"column":0},"generated":{"line":1,"column":243}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":20,"column":0},"generated":{"line":1,"column":247}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":20,"column":0},"generated":{"line":1,"column":266}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":20,"column":0},"generated":{"line":1,"column":268}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":274}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":278}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":21,"column":0},"generated":{"line":1,"column":280}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":283}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":285}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":304}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":22,"column":0},"generated":{"line":1,"column":306}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":23,"column":0},"generated":{"line":1,"column":313}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":23,"column":0},"generated":{"line":1,"column":317}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":23,"column":0},"generated":{"line":1,"column":319}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":322}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":324}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":343}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":24,"column":0},"generated":{"line":1,"column":345}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":25,"column":0},"generated":{"line":1,"column":365}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":25,"column":0},"generated":{"line":1,"column":369}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":25,"column":0},"generated":{"line":1,"column":371}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":27,"column":0},"generated":{"line":1,"column":374}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":27,"column":0},"generated":{"line":1,"column":378}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":27,"column":0},"generated":{"line":1,"column":380}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":31,"column":0},"generated":{"line":1,"column":383}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":31,"column":0},"generated":{"line":1,"column":390}},{"source":"../node_modules/pathfinding/src/finders/JumpPointFinder.js","original":{"line":31,"column":0},"generated":{"line":1,"column":398}}],"sources":{"../node_modules/pathfinding/src/finders/JumpPointFinder.js":"/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n"},"lineCount":null}},"error":null,"hash":"19c46b88d20a0e173e133eb4afa8ba75","cacheData":{"env":{}}}